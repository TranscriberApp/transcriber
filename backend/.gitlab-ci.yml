image: python:3.8-slim
variables:
  APP_NAME: ${CI_PROJECT_NAME}
  NAMESPACE_DEV:  jitsi
  DEV_TAG: dev
  OPENSHIFT_SERVER_PROD: https://openshift.cern.ch


image: python:3.8-slim

stages:
  - build_docker
  - deploy

.docker_build_template: &docker_definition
  stage: build_docker
  image:
    # We recommend using the CERN version of the Kaniko image: gitlab-registry.cern.ch/ci-tools/docker-image-builder
    name: gitlab-registry.cern.ch/ci-tools/docker-image-builder
    entrypoint: [""]
  script:
    # Prepare Kaniko configuration file
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
    # Build and push the image from the Dockerfile at the root of the project.
    # To push to a specific docker tag, amend the --destination parameter, e.g. --destination $CI_REGISTRY_IMAGE:$CI_BUILD_REF_NAME
    # See https://docs.gitlab.com/ee/ci/variables/predefined_variables.html#variables-reference for available variables
    - /kaniko/executor --context ${CI_PROJECT_DIR}/backend --dockerfile ${DFILE} --destination ${TO}

.deploy_template: &deploy_definition
  stage: deploy
  image: gitlab-registry.cern.ch/paas-tools/openshift-client:latest
  script:
    - oc import-image ${APP_NAME} --from="${CI_REGISTRY_IMAGE}:${TAG}" --confirm --token=${TOKEN} --server=${OPENSHIFT_SERVER} -n ${NAMESPACE} || true
    - oc tag "${CI_REGISTRY_IMAGE}:${TAG}" "${APP_NAME}:latest" --token=${TOKEN} --server=${OPENSHIFT_SERVER} -n ${NAMESPACE}


### Docker build definitions
build_docker_dev:
    <<: *docker_definition
    variables:
        DFILE: ${CI_PROJECT_DIR}/backend/Dockerfile
        TO: ${CI_REGISTRY_IMAGE}:${DEV_TAG}



### Docker build definitions
build_docker_dev_listener:
  <<: *docker_definition
  variables:
      DFILE: ${CI_PROJECT_DIR}/backend/Dockerfile.listener
      TO: ${CI_REGISTRY_IMAGE}:${DEV_TAG}

  
deploy_dev:
  <<: *deploy_definition
  variables:
    ENVIRONMENT: dev
    OPENSHIFT_SERVER: ${OPENSHIFT_SERVER_PROD}
    TOKEN: ${OPENSHIFT_TOKEN}
    NAMESPACE: ${NAMESPACE_DEV}
    TAG: ${DEV_TAG}
    ROUTE_HOSTNAME: https://${NAMESPACE_DEV}.web.cern.ch


  
deploy_dev_listener:
  <<: *deploy_definition
  variables:
    ENVIRONMENT: dev
    OPENSHIFT_SERVER: ${OPENSHIFT_SERVER_PROD}
    TOKEN: ${OPENSHIFT_TOKEN}
    NAMESPACE: ${NAMESPACE_DEV}
    TAG: ${DEV_TAG}
    ROUTE_HOSTNAME: https://${NAMESPACE_DEV}.web.cern.ch
